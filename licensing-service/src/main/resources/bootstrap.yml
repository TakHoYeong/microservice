spring:
    application:
     name: licensing-service
    profiles:
      active: dev
    config:
      import: "optional:configserver:http://configserver:8071"
    cloud:
      config:
          name: licensing-service
    main:
      allow-bean-definition-overriding: true

logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.optimagrowth: DEBUG

management.endpoints.enabled-by-default: false
management.endpoint.health:
  enabled: true
  show-details: always

resilience4j.circuitbreaker:
  instances:
    licenseService:
      registerHealthIndicator: true
      sliding-window-size: 5
      permittedNumberOfCallsInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - java.util.concurrent.TimeoutException
        - org.springframework.web.client.ResourceAccessException
    organizationService:
      registerHealthIndicator: true
      sliding-window-size: 6
      permittedNumberOfCallsInHalfOpenState: 4
      waitDurationInOpenState: 20s
      failureRateThreshold: 60

resilience4j.bulkhead:
  instances:
    bulkheadLicenseService:
      maxWaitDuration: 2ms #스레드를 차단할 최대시간
      maxConcurrentCalls: 20 #최대 동시 호출 수

resilience4j.thread-pool-bulkhead:
  instances:
    bulkheadLicenseService:
      maxThreadPoolSize: 1
      coreThreadPoolSize: 1
      queueCapacity: 1
      keepAliveDuration: 20ms

resilience4j.retry:
  instances:
    retryLicenseService:
      max-attempts: 5
      wait-duration: 10000
      retry-exceptions:
        - java.util.concurrent.TimeoutException

resilience4j.ratelimiter:
  instances:
    licensesService:
      timeoutDuration: 1000ms
      limitRefreshPeriod: 5000
      limitForPeriod: 5

eureka:
  client:
    service-url:
      defaultZone: http//localhost:8761/eureka/



